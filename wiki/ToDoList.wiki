#summary Problems that currently need to be addressed
#labels Phase-Design

= Introduction =

The following problems is mostly a step-by-step "what we need to fix" before we can start adding features. At the point where this code reconstruction is done, then features such as new characters, items, treasure chests, and doors can (and will) be added.

If you want to fix a problem, go ahead and put *"-Claimed by "* and your name and date. For example, if I wanted to claim the problem "Needs more Cowbell", it would look like this:
 # Needs more Cowbell *-Claimed by brian.shourd on 12/12*
If you claim a problem, try to have it done (or at least pieces of it) in a timely manner. If you can't do it in a timely manner...don't claim it.

Once you have fixed the problem, and updated the Repository, put *"Done "* and the date, and cross out the problem with strike through. This has a dual purpose:
 # To help us see what has been done, and when
 # To make us feel good about the amount of stuff that has actually been fixed


= Details =

===Problems to be fixed first:===
 * Reconstruction of the code:
  # ~~"`ClassDeclarations.h`" needs to be split into many different headers and each of the implementations need to be put into source files, instead of headers.~~ *Done 12/5*
  # ~~Graphics needs to be put into a class. This is just proper, and can reduce the number of globals that we are using, especially since every other class already stores it's own pointers to necessary screens.~~ *Done 12/5*
  # ~~The Global list of Dynamic Objects should be split into a few [linked?] lists:~~ *Done 12/5*
  # ~~The Global lists need to be implemented as static, public members of their respective classes. This means that we will need some new classes to inherit from `Dynamic_Object`: `Background_Object` and `Interact_Object`. `Torch` should inherit from `Background_Object`.~~ *Done 12/12*
  # ~~The frame rate should be capped~~ *Done((This still needs to be tested)) 12/12*
  # ~~A new struct Point needs to be created, which contains x and y data values. All of the various (and numerous) points within each class and function need to be reformed to comply with this Point struct, making for cleaner, neater code.~~ *Done 12/15

===Once these problems are fixed===
 # ~~Add collision detection with the ground~~ -Claimed and acted (character only because nothing else currently moves verticaly) by achew22
 # Add some treasure chests for the character to open, with items inside.
 # Add some new methods to the character class. Jump(), Attack(), and Interact() (which will open boxes, use doors, etc.) are a few that I can think of.
 # Doors should be added. More to come on the implementation of this.
 # An inventory should be added to the character, so that he can both carry and view items that he has.
 # Treasure chests should be added, presumably with treasure within them.
 # A combat system should be added. More to come on this later, as this will be the largest addition to the code.
 # Collision detection should be added. I haven't figured out a great way to do this yet, so your opinion is as good as mine.

==Eventually==

The whole thing will be automated, so we need some decent AI for the main character. This probably ought to wait until last, so that we know exactly what the AI needs to do, but this is just a heads up.

Email me any ideas that you have, brian.shourd@gmail.com.